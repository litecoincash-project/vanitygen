Linux/OSX with GNU make:
First install prerequisites (Ubuntu 18.04):
sudo apt install libssl-dev libpcre3-dev

---------------------------------------------------------------------
Note: On Ubuntu 20.04 (including when using WSL2), libssl1.0-dev has 
been removed from the package repositories.

To build on Ubuntu 20.04, edit /etc/apt/sources.list and this package 
repo:

deb http://security.ubuntu.com/ubuntu bionic-security main

Then, run:

sudo apt update && apt-cache policy libssl1.0-dev
sudo apt-get install libssl1.0-dev
---------------------------------------------------------------------

Then build with:
make

Windows:
Tools: Microsoft Visual Studio 2010, Visual C++
Prerequisites:
  - OpenSSL 1.0.0d: http://www.slproweb.com/products/Win32OpenSSL.html
  - pthreads-Win32: http://sourceware.org/pthreads-win32/
  - PCRE: http://www.psyon.org/projects/pcre-win32/
  - AMD APP SDK -or- NVIDIA CUDA SDK

Once you have set up these components, edit the following variables
in Makefile.Win32 to reflect the paths where these components were
installed:

OPENSSL_DIR
PTHREADS_DIR
PCRE_DIR
OPENCL_DIR

Note that pthreads and PCRE may be built as static libraries or DLLs.  
The default Makefile.Win32 includes CFLAGS required to link the static
versions of those libraries.  If you want to link against DLLs, make
sure to change the CFLAGS.

Additionally, to create a usable static build of the pthreads-Win32
library, some other changes must be done.  You must edit the Makefile,
and remove "/MD" from the CFLAGS.  Then, build with: "nmake VC-static"

After dependencies have been prepared, open a Visual Studio command
prompt window, and run:

nmake /fMakefile.Win32 vanitygen.exe oclvanitygen.exe


Docker:
Run these commands from the src dir to build and run a docker container that can compile vanitygen. Read the comments in Dockerfile for more info.

docker build -t vanitygen .
docker run -ti vanitygen
